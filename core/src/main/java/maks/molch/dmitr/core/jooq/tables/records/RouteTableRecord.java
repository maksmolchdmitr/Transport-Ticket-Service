/*
 * This file is generated by jOOQ.
 */
package maks.molch.dmitr.core.jooq.tables.records;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import maks.molch.dmitr.core.jooq.tables.RouteTable;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.10"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RouteTableRecord extends UpdatableRecordImpl<RouteTableRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ROUTE_TABLE.ID</code>.
     */
    public void setId(@Nullable Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ROUTE_TABLE.ID</code>.
     */
    @Nullable
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ROUTE_TABLE.DEPARTURE</code>.
     */
    public void setDeparture(@NotNull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ROUTE_TABLE.DEPARTURE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 32)
    @NotNull
    public String getDeparture() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ROUTE_TABLE.ARRIVAL</code>.
     */
    public void setArrival(@NotNull String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ROUTE_TABLE.ARRIVAL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 32)
    @NotNull
    public String getArrival() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ROUTE_TABLE.CARRIER_NAME</code>.
     */
    public void setCarrierName(@NotNull String value) {
        set(3, value);
    }

    /**
     * Getter for <code>ROUTE_TABLE.CARRIER_NAME</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 32)
    @NotNull
    public String getCarrierName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ROUTE_TABLE.DURATION_IN_MINUTES</code>.
     */
    public void setDurationInMinutes(@NotNull Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>ROUTE_TABLE.DURATION_IN_MINUTES</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getDurationInMinutes() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>ROUTE_TABLE.SEAT_COUNT</code>.
     */
    public void setSeatCount(@NotNull Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>ROUTE_TABLE.SEAT_COUNT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getSeatCount() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RouteTableRecord
     */
    public RouteTableRecord() {
        super(RouteTable.ROUTE_TABLE);
    }

    /**
     * Create a detached, initialised RouteTableRecord
     */
    @ConstructorProperties({ "id", "departure", "arrival", "carrierName", "durationInMinutes", "seatCount" })
    public RouteTableRecord(@Nullable Integer id, @NotNull String departure, @NotNull String arrival, @NotNull String carrierName, @NotNull Integer durationInMinutes, @NotNull Integer seatCount) {
        super(RouteTable.ROUTE_TABLE);

        setId(id);
        setDeparture(departure);
        setArrival(arrival);
        setCarrierName(carrierName);
        setDurationInMinutes(durationInMinutes);
        setSeatCount(seatCount);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RouteTableRecord
     */
    public RouteTableRecord(maks.molch.dmitr.core.jooq.tables.pojos.RouteTable value) {
        super(RouteTable.ROUTE_TABLE);

        if (value != null) {
            setId(value.getId());
            setDeparture(value.getDeparture());
            setArrival(value.getArrival());
            setCarrierName(value.getCarrierName());
            setDurationInMinutes(value.getDurationInMinutes());
            setSeatCount(value.getSeatCount());
            resetChangedOnNotNull();
        }
    }
}
